//
// nekRS User Defined File
//

#include <math.h>
#include "udf.hpp"
#include <iostream>

/* UDF Functions */                                                      

void UDF_LoadKernels(nrs_t *nrs)
{
}

void UDF_Setup(nrs_t *nrs)
{
  nrs->o_usrwrk.free(); free(nrs->usrwrk);
  nrs->usrwrk   = (dfloat*) calloc(nrs->mesh->Nelements*nrs->mesh->Np, sizeof(dfloat));
  nrs->o_usrwrk = nrs->mesh->device.malloc(nrs->mesh->Nelements*nrs->mesh->Np*sizeof(dfloat), nrs->usrwrk);
  // printf ("> Test %d \n", nrs->mesh->Nelements*nrs->mesh->Np*sizeof(dfloat));
}

void UDF_ExecuteStep(nrs_t *nrs, dfloat time, int tstep)
{
  nek_userchk();
  //std::cout << "Finished userchk" << std::endl;

  int nwbdt=nekData.cbscnrs[0];
  auto *wrk1 =  nekData.cbscnrs; 
  wrk1 = wrk1 + nwbdt*5*4 + 2; 
  nrs->o_usrwrk.copyFrom(wrk1,nrs->mesh->Nelements*nrs->mesh->Np*sizeof(dfloat));

  //auto *ptr=nekData.cbscnrs;
  //nrs->o_usrwrk.copyFrom(wrk, mesh->Nelements*mesh->Np*sizeof(dfloat));
  //std::cout << "Finished UDF_ExecuteStep" << std::endl;
}
