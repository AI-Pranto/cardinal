#include <math.h>
#include "udf.hpp"
#include <iostream>

void UDF_LoadKernels(nrs_t *nrs)
{
}

void UDF_Setup(nrs_t *nrs)
{
  std::cout << "in UDF setup" << std::endl;
  auto mesh = nrs->mesh;

  int n_gll_points = mesh->Np * mesh->Nelements;
  for (int n = 0; n < n_gll_points; ++n)
  {
    nrs->U[n + 0 * nrs->fieldOffset] = 0.0; // x-velocity
    nrs->U[n + 1 * nrs->fieldOffset] = 0.0; // y-velocity
    nrs->U[n + 2 * nrs->fieldOffset] = 0.0; // z-velocity

    nrs->P[n] = 0.0; // pressure

    dfloat x = nrs->mesh->x[n];
    dfloat y = nrs->mesh->y[n];
    dfloat z = nrs->mesh->z[n];

    nrs->cds->S[n + 0 * nrs->cds->fieldOffset] = exp(x) + sin(y) + x*y*z;
  }
  std::cout << "end of setup" << std::endl;
}

void UDF_ExecuteStep(nrs_t *nrs, dfloat time, int tstep)
{
}
