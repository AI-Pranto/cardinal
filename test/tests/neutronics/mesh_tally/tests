[Tests]
  [./one_mesh]
    type = Exodiff
    input = one_mesh.i
    exodiff = 'one_mesh_out.e'
    cli_args = '--app openmc'
    # This test has very few particles, and OpenMC will error if there aren't any particles
    # on a particular process
    max_parallel = 32
    requirement = "The heat source shall be tallied on an unstructured mesh and normalized against "
                  "a local tally when a single mesh is used. "
                  "The gold file was created with the original OpenMCProblem, showing "
                  "that the mesh tally implementation is equivalent."
  [../]
  [./one_mesh_global]
    type = Exodiff
    input = one_mesh_global.i
    exodiff = 'one_mesh_global_out.e'
    cli_args = '--app openmc'
    # This test has very few particles, and OpenMC will error if there aren't any particles
    # on a particular process
    max_parallel = 32
    requirement = "The heat source shall be tallied on an unstructured mesh and normalized against "
                  "a global tally when a single mesh is used. This test was run with successively finer "
                  "meshes (from 256 elements to 94k elements) to show that the power of the mesh tally "
                  "approaches the value of a cell tally as the difference in volume decreases."
  [../]
[]
